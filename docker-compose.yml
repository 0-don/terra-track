version: "3.8"

services:
  terra-track-vpn:
    container_name: terra-track-vpn
    restart: always
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - SERVER_CITIES=${SERVER_CITIES}

  terra-track:
    container_name: privnote-web
    hostname: privnote-web
    build:
      context: web/
      dockerfile: Dockerfile
    restart: always
    ports:
      - "127.0.0.1:3000:3000"
    expose:
      - 3000
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.privnote-web.rule=Host(`privnote.coding.global`)'
      - 'traefik.http.middlewares.onionHeader.headers.customresponseheaders.Onion-Location=http://pnotegqaaijd3dpqesxfjplwbxk2z6jnaoha7gqalfwiaajqqtsilcqd.onion/'
      - 'traefik.http.routers.privnote-web.middlewares=onionHeader@docker'
      - 'traefik.http.routers.privnote-web.entrypoints=websecure'
      - 'traefik.http.routers.privnote-web.tls.certresolver=letsencrypt'
      - 'traefik.http.services.privnote-web.loadbalancer.server.port=3000'

  privnote-db:
    container_name: privnote-db
    hostname: privnote-db
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - proxy

networks:
  proxy:
    external: false
    name: proxy
